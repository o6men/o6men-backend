"""new_revision

Revision ID: 0b24a3abd322
Revises: 1c66b8f5e341
Create Date: 2025-02-27 06:29:05.126181

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0b24a3abd322'
down_revision: Union[str, None] = '1c66b8f5e341'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bank',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('code', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('name')
    )
    op.alter_column('currency', 'name',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.alter_column('currency', 'code',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.alter_column('currency', 'symbol',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               nullable=True)
    op.create_unique_constraint(None, 'currency', ['code'])
    op.create_unique_constraint(None, 'currency', ['name'])
    op.alter_column('file', 'path',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.alter_column('pattern', 'name',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.alter_column('patternfield', 'name',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.alter_column('patternfield', 'card',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.alter_column('patternfield', 'phone',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.alter_column('patternfield', 'receiver',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('patternfield', 'bank',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.alter_column('patternfield', 'amount',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.alter_column('patternfield', 'currency',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.alter_column('patternfield', 'comment',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('tgauthtoken', 'token',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.add_column('topup', sa.Column('user_id', sa.Integer(), nullable=False))
    op.alter_column('topup', 'transaction_hash',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.drop_constraint('topup_user_pk_fkey', 'topup', type_='foreignkey')
    op.create_foreign_key(None, 'topup', 'user_table', ['user_id'], ['id'])
    op.drop_column('topup', 'user_pk')
    op.drop_column('topup', 'post_balance')
    op.alter_column('user_table', 'first_name',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.alter_column('user_table', 'password',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('user_table', 'tg_username',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('user_table', 'role',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.alter_column('user_table', 'email',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('user_table', 'photo_url',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)
    op.add_column('withdraw', sa.Column('user_id', sa.Integer(), nullable=False))
    op.add_column('withdraw', sa.Column('bank_id', sa.Integer(), nullable=False))
    op.add_column('withdraw', sa.Column('currency_id', sa.Integer(), nullable=False))
    op.add_column('withdraw', sa.Column('pre_balance', sa.Float(), nullable=False))
    op.alter_column('withdraw', 'phone',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.alter_column('withdraw', 'card',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.alter_column('withdraw', 'receiver',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.alter_column('withdraw', 'comment',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.alter_column('withdraw', 'tag',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               nullable=False)
    op.alter_column('withdraw', 'status',
               existing_type=sa.VARCHAR(length=9),
               type_=sa.Text(),
               existing_nullable=False)
    op.drop_constraint('withdraw_user_pk_fkey', 'withdraw', type_='foreignkey')
    op.create_foreign_key(None, 'withdraw', 'bank', ['bank_id'], ['id'])
    op.create_foreign_key(None, 'withdraw', 'currency', ['currency_id'], ['id'])
    op.create_foreign_key(None, 'withdraw', 'user_table', ['user_id'], ['id'])
    op.drop_column('withdraw', 'currency')
    op.drop_column('withdraw', 'bank')
    op.drop_column('withdraw', 'user_pk')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('withdraw', sa.Column('user_pk', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('withdraw', sa.Column('bank', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('withdraw', sa.Column('currency', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'withdraw', type_='foreignkey')
    op.drop_constraint(None, 'withdraw', type_='foreignkey')
    op.drop_constraint(None, 'withdraw', type_='foreignkey')
    op.create_foreign_key('withdraw_user_pk_fkey', 'withdraw', 'user_table', ['user_pk'], ['id'])
    op.alter_column('withdraw', 'status',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=9),
               existing_nullable=False)
    op.alter_column('withdraw', 'tag',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               nullable=True)
    op.alter_column('withdraw', 'comment',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('withdraw', 'receiver',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('withdraw', 'card',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('withdraw', 'phone',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.drop_column('withdraw', 'pre_balance')
    op.drop_column('withdraw', 'currency_id')
    op.drop_column('withdraw', 'bank_id')
    op.drop_column('withdraw', 'user_id')
    op.alter_column('user_table', 'photo_url',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('user_table', 'email',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('user_table', 'role',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('user_table', 'tg_username',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('user_table', 'password',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('user_table', 'first_name',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.add_column('topup', sa.Column('post_balance', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.add_column('topup', sa.Column('user_pk', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'topup', type_='foreignkey')
    op.create_foreign_key('topup_user_pk_fkey', 'topup', 'user_table', ['user_pk'], ['id'])
    op.alter_column('topup', 'transaction_hash',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.drop_column('topup', 'user_id')
    op.alter_column('tgauthtoken', 'token',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('patternfield', 'comment',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('patternfield', 'currency',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('patternfield', 'amount',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('patternfield', 'bank',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('patternfield', 'receiver',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('patternfield', 'phone',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('patternfield', 'card',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('patternfield', 'name',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('pattern', 'name',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('file', 'path',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.drop_constraint(None, 'currency', type_='unique')
    op.drop_constraint(None, 'currency', type_='unique')
    op.alter_column('currency', 'symbol',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               nullable=False)
    op.alter_column('currency', 'code',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('currency', 'name',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.drop_table('bank')
    # ### end Alembic commands ###
